#include "debug_uart.h"
#include <stdio.h>
#include <string.h>

static UART_HandleTypeDef *dbg_uart = NULL;

void DebugUART_Init(UART_HandleTypeDef *huart) { dbg_uart = huart; }

void DebugUART_Print(const char *msg)
{
    if (!dbg_uart || !msg) return;
    HAL_UART_Transmit(dbg_uart, (uint8_t*)msg, (uint16_t)strlen(msg), HAL_MAX_DELAY);
    const char *crlf = "\r\n";
    HAL_UART_Transmit(dbg_uart, (uint8_t*)crlf, 2, HAL_MAX_DELAY);
}

/* NOWE: wersja printf-like */
void DebugUART_Printf(const char *fmt, ...)
{
    if (!dbg_uart || !fmt) return;

    char buf[256];
    va_list ap;
    va_start(ap, fmt);
    int len = vsnprintf(buf, sizeof(buf), fmt, ap);
    va_end(ap);

    if (len < 0) return;
    if (len > (int)sizeof(buf)) len = (int)sizeof(buf);

    HAL_UART_Transmit(dbg_uart, (uint8_t*)buf, (uint16_t)len, HAL_MAX_DELAY);
    const char *crlf = "\r\n";
    HAL_UART_Transmit(dbg_uart, (uint8_t*)crlf, 2, HAL_MAX_DELAY);
}

/* Bez zmian */
void DebugUART_SensorsDual(const TF_LunaData_t *R, const TF_LunaData_t *L,
                           const TCS3472_Data_t *CR, const TCS3472_Data_t *CL)
{
    if (!dbg_uart) return;
    char buf[512];
    int len = snprintf(buf, sizeof(buf),
        "\033[2J\033[H"
        "              RIGHT (I2C1)              |               LEFT (I2C3)\r\n"
        "----------------------------------------+----------------------------------------\r\n"
        " Dist: %4ucm   Strength:%5u   Temp:%5.1fC | Dist: %4ucm   Strength:%5u   Temp:%5.1fC\r\n"
        " R:%4u G:%4u B:%4u C:%5u            | R:%4u G:%4u B:%4u C:%5u\r\n",
        R->distance, R->strength, R->temperature,
        L->distance, L->strength, L->temperature,
        CR->red/64, CR->green/64, CR->blue/64, CR->clear/64,
        CL->red/64, CL->green/64, CL->blue/64, CL->clear/64
    );
    if (len > 0) HAL_UART_Transmit(dbg_uart, (uint8_t*)buf, (uint16_t)len, HAL_MAX_DELAY);
}
